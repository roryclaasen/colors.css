name: Update Version

on:
  schedule:
    - cron: "0 2 * * *"
  push:
    branches:
      - "main"
    tags-ignore:
      - "**"

jobs:
  spelling:
    name: Check Spellings
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Check Spelling
        if: ${{ github.event_name != 'schedule' }}
        uses: streetsidesoftware/cspell-action@v1.5.1

  build:
    name: Test has Package Changed
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.changes.outputs.changes }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Use Node.js 12
        uses: actions/setup-node@v3.1.1
        with:
          node-version: 16
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Build Package
        run: npm run start
      - name: Test Package
        run: npm test
      - name: Set Has Changed
        id: changes
        run: |
          echo "::set-output name=changes::$(git ls-files --others --exclude-standard ; git diff-index --name-only --diff-filter=d HEAD ;)"

  deploy:
    name: Commit Version
    needs: [build, spelling]
    if: needs.build.outputs.changes != '' || (github.event_name != 'schedule' && contains(toJson(github.event.commits), '[force]'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - name: Use Node.js 12
        uses: actions/setup-node@v3.1.1
        with:
          node-version: 16
          cache: "npm"
      - name: Install Dependencies
        run: npm ci
      - name: Build Package
        run: npm run start
      - name: Configure Git
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Commit readme
        id: readme-step
        continue-on-error: true
        run: |
          git add readme.md
          git commit -m "Updates readme with latest changes"
      - name: Commit Tag (with updated readme)
        if: ${{ steps.readme-step.outcome == 'success' }}
        run: |
          version=$(npm version patch)
          git reset --soft HEAD~2
          git commit -m "Updates version to $version"
          git tag -fa $version -m $version
      - name: Commit Tag (without updated readme)
        if: ${{ steps.readme-step.outcome == 'failure' }}
        run: |
          version=$(npm version patch)
          git reset --soft HEAD~1
          git commit -m "Updates version to $version"
          git tag -fa $version -m $version
      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          branch: main
          tags: true
